{"ast":null,"code":"var _jsxFileName = \"C:\\\\simon\\\\uusiprojekti\\\\uusiprojekti\\\\src\\\\components\\\\LoginView.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Form.css';\nimport cookies from 'js-cookie';\nexport default class LoginView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tunnus: '',\n      salasana: '',\n      islogged: false\n    };\n\n    this.change = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); // this.props.onSubmit(this.state);\n\n      this.props.handler(async () => {\n        const rawResponse = await fetch('http://localhost:8000/admin/login', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            tunnus: this.state.tunnus,\n            salasana: this.state.salasana\n          })\n        });\n        const content = await rawResponse.json();\n        cookies.set('token', content.token);\n\n        if (content.success === true) {\n          // console.log(cookies.get('token'))\n          this.props.history.push(\"/view/maksamattomat\");\n        }\n      })();\n      this.setState({\n        tunnus: '',\n        salasana: ''\n      });\n      fetch('http://localhost:8000/admin/istokenvalid', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'authorization': \"Bearer \" + cookies.get('token') + \"\"\n        }\n      }).then(res => res.json()).then(data => {\n        console.log(data.list);\n        console.log(data.list);\n\n        if (data.list) {\n          this.setState({\n            islogged: data.list\n          });\n        } else {\n          return this.setState({\n            islogged: false\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Tunnus\"), React.createElement(\"input\", {\n      name: \"tunnus\",\n      placeholder: \"tunnus\",\n      value: this.state.tunnus,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Salasana\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"salasana\",\n      placeholder: \"salasana\",\n      value: this.state.salasana,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"buttonHolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"submitButton\",\n      onClick: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Kirjaudu\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/simon/uusiprojekti/uusiprojekti/src/components/LoginView.js"],"names":["React","ReactDOM","cookies","LoginView","Component","state","tunnus","salasana","islogged","change","e","setState","target","name","value","onSubmit","preventDefault","props","handler","rawResponse","fetch","method","headers","body","JSON","stringify","content","json","set","token","success","history","push","get","then","res","data","console","log","list","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Form.css';\r\nimport cookies from 'js-cookie'\r\n\r\n\r\nexport default class LoginView extends React.Component {\r\n\r\n    state = {\r\n        tunnus: '',\r\n        salasana: '',\r\n        islogged: false\r\n       \r\n    };\r\n\r\n    change = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };  \r\n\r\n    onSubmit = e => {\r\n      e.preventDefault();\r\n      // this.props.onSubmit(this.state);\r\n      this.props.handler\r\n      (async () => {\r\n        const rawResponse = await fetch('http://localhost:8000/admin/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({tunnus: this.state.tunnus, salasana: this.state.salasana})\r\n        });\r\n        const content = await rawResponse.json();\r\n      cookies.set('token', content.token)\r\n     if(content.success === true){\r\n     // console.log(cookies.get('token'))\r\n       this.props.history.push(\"/view/maksamattomat\")\r\n     }\r\n      \r\n      })();\r\n      \r\n      this.setState({\r\n        tunnus: '',\r\n        salasana: ''\r\n      \r\n      });\r\n\r\n      fetch('http://localhost:8000/admin/istokenvalid',{\r\n      method: 'GET',\r\n      headers:{\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'authorization': \"Bearer \"+cookies.get('token')+\"\"\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n    console.log(data.list)\r\n    console.log(data.list);\r\n    if(data.list){\r\n      this.setState({ islogged: data.list })\r\n    } else {\r\n      return  this.setState({ islogged: false });\r\n    }\r\n    })\r\n    };\r\n  \r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n      <div id = \"holder\">\r\n        \r\n      <form><p>Tunnus</p>\r\n        <input\r\n        name =\"tunnus\"\r\n        placeholder = 'tunnus' \r\n        value ={this.state.tunnus}\r\n        onChange={e => this.change(e)}        \r\n        /><br/><br/><p>Salasana</p>\r\n        \r\n        <input\r\n        type = \"password\"\r\n        name = \"salasana\"\r\n        placeholder = 'salasana' \r\n        value ={this.state.salasana}\r\n        onChange={e => this.change(e)}\r\n        /><br/><br/>\r\n        <div id=\"buttonHolder\">\r\n        <button id = \"submitButton\" onClick={e => this.onSubmit(e)}>Kirjaudu</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}